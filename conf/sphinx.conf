
# Sphinx configuration file sample
# doc/sphinx.html for details.
#

#############################################################################
## data source definition
#############################################################################

source src1
{
	
	type			= mysql

	sql_host		= localhost
	sql_user		= root
	sql_pass		= root
	sql_db			= tecdoc_vehicles
	sql_port		= 3306	# optional, default is 3306


	# pre-query, executed before the main fetch query
	# Personal note: To fix bad encoding
	sql_query_pre		= SET NAMES utf8


	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
	#sql_query		= \
	#	SELECT CONCAT(genarts.id,versiones.codigo_tecdoc,FLOOR(RAND()*10000-1000)+1000,FLOOR(RAND()*1000-100)+100) AS id, marcas.nombre AS marca, modelos.nombre AS modelo, versiones.nombre AS version, CONCAT(versiones.potencia_kw, "KW") AS potencia_kw, CONCAT(versiones.potencia_cv, 'CV') AS potencia_cv, tipos_combustible.nombre AS combustible, ROUND(versiones.cilindrada/1000, 1) AS cilindrada, genarts.nombre AS genart FROM marcas,modelos,versiones,tipos_combustible,genarts WHERE modelos.marca_id = marcas.id AND versiones.modelo_id = modelos.id AND versiones.tipo_combustible_id = tipos_combustible.id AND marcas.nombre = "opel"

	sql_query		= \
		SELECT versiones.codigo_tecdoc AS id, marcas.nombre AS marca, modelos.nombre AS modelo, versiones.nombre AS version, CONCAT(versiones.potencia_kw, "KW") AS potencia_kw, CONCAT(versiones.potencia_cv, 'CV') AS potencia_cv, tipos_combustible.nombre AS combustible, ROUND(versiones.cilindrada/1000, 1) AS cilindrada FROM marcas,modelos,versiones,tipos_combustible WHERE modelos.marca_id = marcas.id AND versiones.modelo_id = modelos.id AND versiones.tipo_combustible_id = tipos_combustible.id



	# range query step
	# optional, default is 1024
	#
	# sql_range_step		= 1000


	# unsigned integer attribute declaration
	# multi-value (an arbitrary number of attributes is allowed), optional
	# optional bit size can be specified, default is 32
	#
	# sql_attr_uint		= author_id
	# sql_attr_uint		= forum_id:9 # 9 bits for forum_id



	# bigint attribute declaration
	# multi-value (an arbitrary number of attributes is allowed), optional
	# declares a signed (unlike uint!) 64-bit attribute
	#
	# sql_attr_bigint		= my_bigint_id



	# floating point attribute declaration
	# multi-value (an arbitrary number of attributes is allowed), optional
	# values are stored in single precision, 32-bit IEEE 754 format
	#
	# sql_attr_float		= lat_radians
	# sql_attr_float		= long_radians



	# string attribute declaration
	# multi-value (an arbitrary number of these is allowed), optional
	# lets you store and retrieve strings
	
	sql_field_string	= marca
	sql_field_string	= modelo
	sql_field_string	= version
	sql_field_string	= combustible
	sql_field_string	= potencia_kw
	sql_field_string	= cilindrada



	# ranged query throttling, in milliseconds
	# optional, default is 0 which means no delay
	# enforces given delay before each query step
	sql_ranged_throttle	= 0


}


# inherited source example
#
# all the parameters are copied from the parent source,
# and may then be overridden in this source definition
source src1throttled : src1
{
	sql_ranged_throttle	= 100
}

#############################################################################
## index definition
#############################################################################

# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index test1
{
	# index type
	# optional, default is 'plain'
	# known values are 'plain', 'distributed', and 'rt' (see samples below)
	# type			= plain

	# document source(s) to index
	# multi-value, mandatory
	# document IDs must be globally unique across all sources
	source			= src1

	# index files path and file name, without extension
	# mandatory, path must be writable, extensions will be auto-appended
	path			= /var/lib/sphinxsearch/data/test1

	# document attribute values (docinfo) storage mode
	# optional, default is 'extern'
	# known values are 'none', 'extern' and 'inline'
	docinfo			= extern

	# dictionary type, 'crc' or 'keywords'
	# crc is faster to index when no substring/wildcards searches are needed
	# crc with substrings might be faster to search but is much slower to index
	# (because all substrings are pre-extracted as individual keywords)
	# keywords is much faster to index with substrings, and index is much (3-10x) smaller
	# keywords supports wildcards, crc does not, and never will
	# optional, default is 'keywords'
	dict			= keywords

	
	# a list of morphology preprocessors to apply
	# optional, default is empty
	#
	# builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
	# 'soundex', and 'metaphone'; additional preprocessors available from
	# libstemmer are 'libstemmer_XXX', where XXX is algorithm code
	# (see libstemmer_c/libstemmer/modules.txt)
	#
	# morphology		= stem_en, stem_ru, soundex
	# morphology		= libstemmer_german
	# morphology		= libstemmer_sv
	morphology		= none


	# minimum word length at which to enable stemming
	# optional, default is 1 (stem everything)
	#
	# min_stemming_len	= 1


	# Personal note: charset table to be able to query word with accents ej: Spanish
	charset_table = 0..9, A..Z->a..z, a..z, \
		 U+DD->y, U+FD->y, \
		 U+D1->n, U+F1->n, \
		 U+C0->a, U+C1->a, U+C2->a, U+C3->a, U+C4->a, U+C5->a, \
		 U+E0->a, U+E1->a, U+E2->a, U+E3->a, U+E4->a, U+E5->a, \
		 U+C8->e, U+C9->e, U+CA->e, U+CB->e, \
		 U+E8->e, U+E9->e, U+EA->e, U+EB->e, \
		 U+CC->i, U+CD->i, U+CE->i, U+CF->i, \
		 U+EC->i, U+ED->i, U+EE->i, U+EF->i, \
		 U+D2->o, U+D3->o, U+D4->o, U+D5->o, U+D6->o, \
		 U+F2->o, U+F3->o, U+F4->o, U+F5->o, U+F6->o, \
		 U+D9->u, U+DA->u, U+DB->u, U+DC->u, \
		 U+F9->u, U+FA->u, U+FB->u, U+FC->u, U+0027\



	# minimum indexed word length
	# default is 1 (index everything)
	min_word_len		= 1


	# minimum word prefix length to index
	# optional, default is 0 (do not index prefixes)
	#
	min_prefix_len		= 2


	# minimum word infix length to index
	# optional, default is 0 (do not index infixes)
	#
	#min_infix_len		= 2


	# maximum substring (prefix or infix) length to index
	# optional, default is 0 (do not limit substring length)
	#
	# max_substring_len	= 8


	# expand keywords with exact forms and/or stars when searching fit indexes
	# search-time only, does not affect indexing, can be 0 or 1
	# optional, default is 0 (do not expand keywords)
	#
	expand_keywords		= 1

	

	# whether to strip HTML tags from incoming documents
	# known values are 0 (do not strip) and 1 (do strip)
	# optional, default is 0
	html_strip		= 0




	# whether to enable in-place inversion (2x less disk, 90-95% speed)
	# optional, default is 0 (use separate temporary files), indexer-only
	#
	# inplace_enable		= 1



	# whether to index original keywords along with stemmed versions
	# enables "=exactform" operator to work
	# optional, default is 0
	#
	# index_exact_words	= 1


}


# inherited index example
#
# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
#index test1stemmed : test1
#{
#	path			= /var/lib/sphinxsearch/data/test1stemmed
#	morphology		= stem_en
#}




#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 128M, max is 2047M, recommended is 256M to 1024M
	mem_limit		= 128M

	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iops		= 40


	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iosize		= 1048576
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# [hostname:]port[:protocol], or /unix/socket/path to listen on
	# known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
	#
	# multi-value, multiple listen points are allowed
	# optional, defaults are 9312:sphinx and 9306:mysql41, as below
	#
	#listen			= 127.0.0.1:9312
	listen			= 10.0.0.10:9312
	

	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	log			= /var/log/sphinxsearch/searchd.log

	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	query_log		= /var/log/sphinxsearch/query.log

	# client read timeout, seconds
	# optional, default is 5
	read_timeout		= 5

	# request timeout, seconds
	# optional, default is 5 minutes
	client_timeout		= 300

	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children		= 30

	# maximum amount of persistent connections from this master to each agent host
	# optional, but necessary if you use agent_persistent. It is reasonable to set the value
	# as max_children, or less on the agent's hosts.
	persistent_connections_limit	= 30

	# PID file, searchd process ID file name
	# mandatory
	pid_file		= /var/run/sphinxsearch/searchd.pid

}



# --eof--
